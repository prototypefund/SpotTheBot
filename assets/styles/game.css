@font-face {
  font-family: 'CompassPro';
  src: url('hf-free-complete/compass-pro-v1.1/CompassPro.woff') format('woff'),
    /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
    url('hf-free-complete/compass-pro-v1.1/CompassPro.ttf') format('truetype');
  /* Chrome 4+, Firefox 3.5, Opera 10+, Safari 3—5 */
}

@font-face {
  font-family: 'EquipmentPro';
  src: url('hf-free-complete/equipment-pro-v1.1/EquipmentPro.woff') format('woff'),
    /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
    url('hf-free-complete/equipment-pro-v1.1/EquipmentPro.ttf') format('truetype');
  /* Chrome 4+, Firefox 3.5, Opera 10+, Safari 3—5 */
}

@font-face {
  font-family: 'ExpressionPro';
  src: url('hf-free-complete/expression-pro-v1.1/ExpressionPro.woff') format('woff'),
    /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
    url('hf-free-complete/expression-pro-v1.1/ExpressionPro.ttf') format('truetype');
  /* Chrome 4+, Firefox 3.5, Opera 10+, Safari 3—5 */
}

@font-face {
  font-family: 'FutilePro';
  src: url('hf-free-complete/futile-pro-v1/FutilePro.woff') format('woff'),
    /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
    url('hf-free-complete/futile-pro-v1/FutilePro.ttf') format('truetype');
  /* Chrome 4+, Firefox 3.5, Opera 10+, Safari 3—5 */
}

@font-face {
  font-family: 'MatchupPro';
  src: url('hf-free-complete/matchup-pro-v1.1/MatchupPro.woff') format('woff'),
    /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
    url('hf-free-complete/matchup-pro-v1.1/MatchupPro.ttf') format('truetype');
  /* Chrome 4+, Firefox 3.5, Opera 10+, Safari 3—5 */
}

* {
  box-sizing: border-box;
}

.pixel-corners-soft,
.pixel-corners-soft--wrapper {
  clip-path: polygon(0px calc(100% - 20px),
      4px calc(100% - 20px),
      4px calc(100% - 12px),
      8px calc(100% - 12px),
      8px calc(100% - 8px),
      12px calc(100% - 8px),
      12px calc(100% - 4px),
      20px calc(100% - 4px),
      20px 100%,
      calc(100% - 20px) 100%,
      calc(100% - 20px) calc(100% - 4px),
      calc(100% - 12px) calc(100% - 4px),
      calc(100% - 12px) calc(100% - 8px),
      calc(100% - 8px) calc(100% - 8px),
      calc(100% - 8px) calc(100% - 12px),
      calc(100% - 4px) calc(100% - 12px),
      calc(100% - 4px) calc(100% - 20px),
      100% calc(100% - 20px),
      100% 20px,
      calc(100% - 4px) 20px,
      calc(100% - 4px) 12px,
      calc(100% - 8px) 12px,
      calc(100% - 8px) 8px,
      calc(100% - 12px) 8px,
      calc(100% - 12px) 4px,
      calc(100% - 20px) 4px,
      calc(100% - 20px) 0px,
      20px 0px,
      20px 4px,
      12px 4px,
      12px 8px,
      8px 8px,
      8px 12px,
      4px 12px,
      4px 20px,
      0px 20px);
  position: relative;
}

.pixel-corners-soft {
  border: 4px solid transparent;
}

.pixel-corners-soft--wrapper {
  width: fit-content;
  height: fit-content;
}

.pixel-corners-soft--wrapper .pixel-corners-soft {
  display: block;
  clip-path: polygon(4px 20px,
      8px 20px,
      8px 12px,
      12px 12px,
      12px 8px,
      20px 8px,
      20px 4px,
      calc(100% - 20px) 4px,
      calc(100% - 20px) 8px,
      calc(100% - 12px) 8px,
      calc(100% - 12px) 12px,
      calc(100% - 8px) 12px,
      calc(100% - 8px) 20px,
      calc(100% - 4px) 20px,
      calc(100% - 4px) calc(100% - 20px),
      calc(100% - 8px) calc(100% - 20px),
      calc(100% - 8px) calc(100% - 12px),
      calc(100% - 12px) calc(100% - 12px),
      calc(100% - 12px) calc(100% - 8px),
      calc(100% - 20px) calc(100% - 8px),
      calc(100% - 20px) calc(100% - 4px),
      20px calc(100% - 4px),
      20px calc(100% - 8px),
      12px calc(100% - 8px),
      12px calc(100% - 12px),
      8px calc(100% - 12px),
      8px calc(100% - 20px),
      4px calc(100% - 20px));
}

.pixel-corners-soft::after,
.pixel-corners-soft--wrapper::after {
  content: "";
  position: absolute;
  clip-path: polygon(0px calc(100% - 20px),
      4px calc(100% - 20px),
      4px calc(100% - 12px),
      8px calc(100% - 12px),
      8px calc(100% - 8px),
      12px calc(100% - 8px),
      12px calc(100% - 4px),
      20px calc(100% - 4px),
      20px 100%,
      calc(100% - 20px) 100%,
      calc(100% - 20px) calc(100% - 4px),
      calc(100% - 12px) calc(100% - 4px),
      calc(100% - 12px) calc(100% - 8px),
      calc(100% - 8px) calc(100% - 8px),
      calc(100% - 8px) calc(100% - 12px),
      calc(100% - 4px) calc(100% - 12px),
      calc(100% - 4px) calc(100% - 20px),
      100% calc(100% - 20px),
      100% 20px,
      calc(100% - 4px) 20px,
      calc(100% - 4px) 12px,
      calc(100% - 8px) 12px,
      calc(100% - 8px) 8px,
      calc(100% - 12px) 8px,
      calc(100% - 12px) 4px,
      calc(100% - 20px) 4px,
      calc(100% - 20px) 0px,
      20px 0px,
      20px 4px,
      12px 4px,
      12px 8px,
      8px 8px,
      8px 12px,
      4px 12px,
      4px 20px,
      0px 20px,
      0px 50%,
      4px 50%,
      4px 20px,
      8px 20px,
      8px 12px,
      12px 12px,
      12px 8px,
      20px 8px,
      20px 4px,
      calc(100% - 20px) 4px,
      calc(100% - 20px) 8px,
      calc(100% - 12px) 8px,
      calc(100% - 12px) 12px,
      calc(100% - 8px) 12px,
      calc(100% - 8px) 20px,
      calc(100% - 4px) 20px,
      calc(100% - 4px) calc(100% - 20px),
      calc(100% - 8px) calc(100% - 20px),
      calc(100% - 8px) calc(100% - 12px),
      calc(100% - 12px) calc(100% - 12px),
      calc(100% - 12px) calc(100% - 8px),
      calc(100% - 20px) calc(100% - 8px),
      calc(100% - 20px) calc(100% - 4px),
      20px calc(100% - 4px),
      20px calc(100% - 8px),
      12px calc(100% - 8px),
      12px calc(100% - 12px),
      8px calc(100% - 12px),
      8px calc(100% - 20px),
      4px calc(100% - 20px),
      4px 50%,
      0px 50%);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: black;
  display: block;
  pointer-events: none;
}

.pixel-corners-soft::after {
  margin: -4px;
}

.pixel-corners-hard,
.pixel-corners-hard--wrapper {
  clip-path: polygon(0px calc(100% - 8px),
    4px calc(100% - 8px),
    4px calc(100% - 4px),
    8px calc(100% - 4px),
    8px 100%,
    calc(100% - 8px) 100%,
    calc(100% - 8px) calc(100% - 4px),
    calc(100% - 4px) calc(100% - 4px),
    calc(100% - 4px) calc(100% - 8px),
    100% calc(100% - 8px),
    100% 8px,
    calc(100% - 4px) 8px,
    calc(100% - 4px) 4px,
    calc(100% - 8px) 4px,
    calc(100% - 8px) 0px,
    8px 0px,
    8px 4px,
    4px 4px,
    4px 8px,
    0px 8px);
  position: relative;
}
.pixel-corners-hard {
  border: 4px solid transparent;
}
.pixel-corners-hard--wrapper {
  width: fit-content;
  height: fit-content;
}
.pixel-corners-hard--wrapper .pixel-corners-hard {
  display: block;
  clip-path: polygon(4px 8px,
    8px 8px,
    8px 4px,
    calc(100% - 8px) 4px,
    calc(100% - 8px) 8px,
    calc(100% - 4px) 8px,
    calc(100% - 4px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 4px),
    8px calc(100% - 4px),
    8px calc(100% - 8px),
    4px calc(100% - 8px));
}
.pixel-corners-hard::after,
.pixel-corners-hard--wrapper::after {
  content: "";
  position: absolute;
  clip-path: polygon(0px calc(100% - 8px),
    4px calc(100% - 8px),
    4px calc(100% - 4px),
    8px calc(100% - 4px),
    8px 100%,
    calc(100% - 8px) 100%,
    calc(100% - 8px) calc(100% - 4px),
    calc(100% - 4px) calc(100% - 4px),
    calc(100% - 4px) calc(100% - 8px),
    100% calc(100% - 8px),
    100% 8px,
    calc(100% - 4px) 8px,
    calc(100% - 4px) 4px,
    calc(100% - 8px) 4px,
    calc(100% - 8px) 0px,
    8px 0px,
    8px 4px,
    4px 4px,
    4px 8px,
    0px 8px,
    0px 50%,
    4px 50%,
    4px 8px,
    8px 8px,
    8px 4px,
    calc(100% - 8px) 4px,
    calc(100% - 8px) 8px,
    calc(100% - 4px) 8px,
    calc(100% - 4px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 8px),
    calc(100% - 8px) calc(100% - 4px),
    8px calc(100% - 4px),
    8px calc(100% - 8px),
    4px calc(100% - 8px),
    4px 50%,
    0px 50%);
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: #000000;
  display: block;
  pointer-events: none;
}
.pixel-corners-hard::after {
  margin: -4px;
}

.pixel-corners-hard::before {
  content: ''; /* Required for the pseudo-element to work */
  position: absolute;
  top: 0;      /* Align to the top of the container */
  left: 0;     /* Align to the left of the container */
  right: 0;    /* Stretch to the right edge of the container */
  height: 16px; /* Height of the black bar */
  background-color: black; /* Color of the bar */
  z-index: 10;  /* Ensure it's above the other content, adjust as needed */
}

.eightbit-btn {
  /*https://codepen.io/MatthewShields/pen/pwrXpV*/
  background: #92CD41;
  display: inline-block;
  position: relative;
  text-align: center;
  font-size: 30px;
  padding: 20px;
  text-decoration: none;
  color: #76c442;
  box-shadow: inset -4px -4px 0px 0px #4AA52E;
}
.eightbit-btn:hover, .eightbit-btn:focus {
  background: #76c442;
  box-shadow: inset -6px -6px 0px 0px #4AA52E;
}
.eightbit-btn:active {
  box-shadow: inset 4px 4px 0px 0px #4AA52E;
}
.eightbit-btn:before, .eightbit-btn:after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  box-sizing: content-box;
}
.eightbit-btn:before {
  top: -6px;
  left: 0;
  border-top: 6px black solid;
  border-bottom: 6px black solid;
}
.eightbit-btn:after {
  left: -6px;
  top: 0;
  border-left: 6px black solid;
  border-right: 6px black solid;
}
.eightbit-btn--reset {
  background: #E76E55;
  box-shadow: inset -4px -4px 0px 0px #8C2022;
}
.eightbit-btn--reset:hover, .eightbit-btn--reset:focus {
  background: #CE372B;
  box-shadow: inset -6px -6px 0px 0px #8C2022;
}
.eightbit-btn--reset:active {
  box-shadow: inset 4px 4px 0px 0px #8C2022;
}
.eightbit-btn--proceed {
  background: #F7D51D;
  box-shadow: inset -4px -4px 0px 0px #E59400;
}
.eightbit-btn--proceed:hover, .eightbit-btn--proceed:focus {
  background: #F2C409;
  box-shadow: inset -6px -6px 0px 0px #E59400;
}
.eightbit-btn--proceed:active {
  box-shadow: inset 4px 4px 0px 0px #E59400;
}

button {
  font-family: 'EquipmentPro', sans-serif;
}

.dashed-line {
  grid-column: 1 / -1; /* Span across all columns */
  height: 50px; /* Adjust the height as needed */
  position: relative; /* Allows absolute positioning of the avatar */
}

.dashed-line::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  border-top: 4px dashed grey; /* Creates the dashed line */
  transform: translateY(-50%); /* Center the line vertically */
}


body,
html {
  height: 100%;
  width: 800px;
  margin: 0 auto;
  background: #f0f0f0;
  font-family: 'ExpressionPro', sans-serif;
  font-size: 32px;

  /* Subtle background pattern can be added via an image */
}

.container {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  row-gap: 0;
  column-gap: 20px;
  padding: 10px;
  color: white;
  background: black;
}

h1 {
  grid-column: 1 / -1;
  text-align: center;
  margin: 0;
  font-style: italic;
  font-size: 2.25em;
}

.text-content {
  font-family: "MatchupPro", sans-serif;
  font-size: 1.5em;
  grid-column: 1 / -1;
  background-color: white;
  color: black;
  padding: 20px;
  /*word-spacing: 0;*/
}

.stats {
  text-align: center;
  display: grid;
  place-items: center; /* Centers both vertically and horizontally */
}

.submit {
  grid-column: 2 / -2;
  text-align: center;
  color: black;
  margin: 30px;
}

.points-remaining {
  grid-column: 1 / -1; /* Span across all columns */
  height: 10px; /* Adjust the height as needed */
  position: relative; /* Allows absolute positioning of the avatar */
  margin-left: 10px;
  margin-right: 10px;
}

.points-remaining::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  border-top: 4px solid rgb(31, 168, 10); /* Creates the dashed line */
  transform: translateY(-50%); /* Center the line vertically */
}

.legend {
  grid-column: 1 / -1;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  margin: .5em;
  margin-bottom: 1.5em;
}

.legend-item {
  font-family: "ExpressionPro", sans-serif;
  font-style: italic;
  text-align: center;
  padding: .1em;
  padding-left: .4em;
  padding-right: .4em;
  font-size: 1em;
  color: black;
}

.item-01 {
  background-color: thistle;
}

.item-02 {
  background-color: lightblue;
}

.word {
  cursor: pointer;
  position: relative;
  color: black; /* Original text color */
}

.word:hover::after {
  width: 100%;
}

.untagged {
  background-color: white;
  z-index: -2;
}

.untagged::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: lightblue; /* Highlight color */
  transition: width 0.5s ease; /* Animation timing */
  z-index: -1;
}

